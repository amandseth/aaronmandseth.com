---
const apiBaseUrl = import.meta.env.API_URL || "https://api.aaronmandseth.com";
---

<section id="contact" class="my-24 pt-4 text-lg">
	<h1 class="my-4 text-3xl">Contact</h1>
	<p class="mb-8">
		Please fill out the form below and I will get back to you as soon as
		possible. I look forward to hearing from you!
	</p>
	<div class="w-full">
		<form
			id="contact-form"
			action={`${apiBaseUrl}/v1.0/contact`}
			method="post"
		>
			<div class="mb-4">
				<label
					for="contact-name"
					class="block font-bold text-brand-foreground"
				>
					Name{" "}
					<span class="ms-1 text-red-500">*</span>
				</label>
				<input
					type="text"
					id="contact-name"
					name="name"
					class="mt-2 w-full rounded bg-brand-background-darker px-3 py-2 shadow"
					data-contact-form-input
					required
				/>
			</div>
			<div class="mb-4">
				<label
					for="contact-email"
					class="block font-bold text-brand-foreground"
				>
					Email{" "}
					<span class="ms-1 text-red-500">*</span>
				</label>
				<input
					type="email"
					id="contact-email"
					name="email"
					class="mt-2 w-full rounded bg-brand-background-darker px-3 py-2 shadow"
					data-contact-form-input
					required
				/>
			</div>
			<div class="mb-4">
				<label
					for="contact-message"
					class="block font-bold text-brand-foreground"
				>
					Message{" "}
					<span class="ms-1 text-red-500">*</span>
				</label>
				<textarea
					id="contact-message"
					name="message"
					rows="10"
					class="mt-2 w-full rounded bg-brand-background-darker px-3 py-2 shadow"
					data-contact-form-input
					required></textarea>
			</div>
			<div class="mb-4 hidden">
				<label
					for="contact-extra"
					class="block font-bold text-brand-foreground"
				>
					If you can see this field, leave it blank.
				</label>
				<input
					type="text"
					id="contact-extra"
					name="extraField"
					class="mt-2 w-full rounded px-3 py-2 shadow"
					data-contact-form-input
				/>
			</div>
			<div class="text-right">
				<button
					class="mb-4 w-full cursor-pointer whitespace-nowrap rounded-md border bg-brand-background px-5 py-3 text-base leading-none text-brand-foreground shadow-xl transition hover:border-brand-highlight md:w-auto"
					id="contact-submit">Submit</button
				>
			</div>
			<div
				id="contact-result-message"
				class="hidden text-center transition-all"
			>
			</div>
		</form>
	</div>
</section>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const messageDiv = document.querySelector("#contact-result-message");
		const submitButton = document.querySelector("#contact-submit");
		const form = document.querySelector("#contact-form") as HTMLFormElement;
		const action = form?.getAttribute("action");

		if (!form || !action || !submitButton) return;

		submitButton.addEventListener("click", async (event) => {
			event.preventDefault();

			if (!form.reportValidity()) return;

			const inputElements = Array.from(
				form.querySelectorAll("[data-contact-form-input]")
			) as HTMLInputElement[];
			const formData: { [key: string]: string } = {};

			inputElements.forEach((el) => {
				const name = el.getAttribute("name");
				const value = el.value;

				if (!name || !value) return;

				formData[name] = value;
			});

			try {
				const response = await fetch(action, {
					method: "POST",
					mode: "cors",
					cache: "no-cache",
					headers: {
						"Content-Type": "application/json",
					},
					body: JSON.stringify(formData),
				});

				if (!messageDiv) return;
				if (!response.ok) throw new Error("Response status not OK");

				messageDiv.classList.remove("text-red-500");
				messageDiv.textContent = "Your message was received, thanks!";
				messageDiv.classList.remove("hidden");
			} catch {
				if (!messageDiv) return;

				messageDiv.classList.add("text-red-500");
				messageDiv.textContent =
					"There was an error sending your message";
				messageDiv.classList.remove("hidden");
			}
		});
	});
</script>
